# FLSUN Super Racer SKR 1.3 (clone) LPC1768 Mainboard with BMG LGX Lite/LDO-36STH20-1004AHG Direct Drive Extruder
# Based on:
# https://github.com/Klipper3d/klipper/blob/master/config/example-delta.cfg
# https://github.com/Klipper3d/klipper/blob/master/config/generic-bigtreetech-skr-v1.3.cfg
# https://github.com/Klipper3d/klipper/blob/master/config/printer-flsun-qqs-2020.cfg

##========================== Pin Definitions ========================
##               X/A       Y/B       Z/C       E0       E1
## STEP_PIN      2.2       0.19      0.22      2.13     0.1
## DIR_PIN       2.6       0.20      2.11      0.11     0.0
## ENABLE_PIN    2.1       2.8       0.21      2.12     0.10
## MIN_PIN       1.29      1.27      1.25      -        -
## MAX_PIN       1.28      1.26      1.24      -        -
## UART_RX       1.17      1.15      1.10      1.8      1.1
## UART_TX       4.29      1.16      1.14      1.9      1.4
##
## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.25
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.23
## FAN                2.3
## SERVO              2.0
##===================================================================
##
##  Under the stepper drivers are 4 rows of configuration pins. 
##  Top-most pins identified below correspond to the pins closest to the stepper motor connectors/edge of the board.
##  Further inward from the stepper driver connectors are UART configuration pins, 
##  highlighted in red on the silkscreen and easily identifiable visually (XUART/YUART/ZUART/E0UART/E1UART).
##  For STEP/DIR Mode:     For UART Mode:         For SPI Mode:
##    o  o--o                o  o  o                o--o  o
##    o  o--o                o  o  o                o--o  o
##    o  o--o                o  o  o                o--o  o
##    o  o  o                o  o  o                o--o  o
## 
##     o  o                   o--o                   o  o               <-- XUART/YUART/ZUART/E0UART/E1UART
##===================================================================


#####################################################################
#   Printer Definition - Linear Delta Kinematics
#####################################################################

[mcu]
##  Obtain definition by "ls /dev/serial/by-id/*" (or "ls -l /dev/serial/by-id/") then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0E80001501812EAED3391E53821E00F5-if00

[printer]
kinematics: delta
delta_radius: 151.67
print_radius: 130
max_velocity: 300           # maximum velocity (mm/s) of the toolhead relative to the print. FLSun provided Marlin "Configuration.h" value for DEFAULT_MAX_FEEDRATE is { 200, 200, 200, 100 }
square_corner_velocity: 5   # maximum velocity (mm/s) that the toolhead may travel a 90 deg corner at
max_accel: 5000             # maximum acceleration (mm/s^2) of the toolhead relative to the print. FLSun provided Marlin "Configuration.h" value for DEFAULT_ACCELERATION is 2800
max_accel_to_decel: 3000    # how fast the toolhead may go from accel to decel. Default is 0.5*max_accel (baseline 2000)

##  The minimum z position is the minimum z position the user may command the head to move to. The default is 0.
##  During the delta calibration process, it may be necessary to probe below where the probe triggers (what would otherwise be considered the plane of the bed).
##  It is typical to permit this during calibration, but should be removed after the actual [probe] z_offset value is determined (by commenting out minimum_z_position)
##  This would be based upon the defined z_offset (in the [probe] section) relative to the actual distance between the probe and the nozzle.
##  For example, if [stepper_a] position_endstop is 336 (z=336 when endstops trigger) and [probe] z_offset is 20, then when the probe triggers, the actual z
##      height will be the computed z (based on movement) minus the defined [probe] z_offset. If the computed z value is less than the defined
##      [probe] z_offset, then during PROBE_CALIBRATE, the nozzle must be commanded to a value less than zero. Unless computed_z minus [probe] z_offset
##      is greater than minimum_z_position (default = 0), then PROBE_CALIBRATE will be impossible to execute as the firmware will not allow commanded
##      z positions less than minimum_z_position. The user can either define a large enough initial [probe] z_offset value that is guaranteed to be larger
##      than the actual probe trigger point-to-nozzle OR define a minimum_z_position value that is large enough in the negative sense to guarantee
##      a successful PROBE_CALIBRATE process.
##  PROBE_CALIBRATE results:
##      probe at 0.000,0.000 is z=15.025000mm (determined z value when probe triggers)
##      Note: At this time (the probe triggered at Z=15.025000mm and then the extruder raised 5mm), the nozzle was measured to be approximately 27mm above the bed.
##      paper test ACCEPT value was z=-7.575
##      resulting z_offset = 7.575 + 15.025 = 22.600
##  Note: FLSun provided Marlin "Configuration.h" value for Z_PROBE_LOW_POINT is -25, Z_PROBE_OFFSET_RANGE_MIN is -30, Z_PROBE_OFFSET_RANGE_MAX is 30.
#minimum_z_position=-15      # <----- This is important. Read above.

##========================== Delta Calibrate ========================
[delta_calibrate]
radius: 120            # Radius (in mm) of the area that may be probed.
horizontal_move_z: 30  # The height (in mm) that the head should be commanded to move to (absolute!) prior to starting probe. Should be ~5mm larger than [probe] z_offset.
## Enhanced Delta Calibrate Results (reference only):
## DELTA_ANALYZE CENTER_DISTS=74.15,74.14,74.11,74.24,74.18,74.28
## DELTA_ANALYZE OUTER_DISTS=74.21,74.13,74.19,74.07,74.29,74.10
## DELTA_ANALYZE CENTER_PILLAR_WIDTHS=9.08,8.96,8.96
## DELTA_ANALYZE OUTER_PILLAR_WIDTHS=9.19,9.07,9.03,8.86,9.14,8.93
## DELTA_ANALYZE SCALE=1.0

#####################################################################
#   A/B/C Stepper Settings
#####################################################################

##  A/B/C Stepper Motor Specs:
##  Model: FLSUN 42SHDC4047Z-23SY
##  Step Angle: 1.8Deg
##  Current: FLSun provided Marlin "Configuration_adv.h" value for X/Y/Z_CURRENT is 950mA RMS. Based on this, max current is assumed to be 0.950 * 1.414 = 1.3433A.
##
##  rotation_distance = <full_steps_per_rotation> * <microsteps> / <microsteps_per_mm> = 200 * 16 / 80 = 40   <--- Use this if e-step/microsteps_per_mm is known
##                    = <belt_pitch> * <number_of_teeth_on_pulley> = 2 * 20 = 40                              <--- Use this if belt/pulley information is known
##    where:
##      full_steps_per_rotation = 360Deg / Step Angle =  360 / 1.8 = 200
##      microsteps = 16. for TMC2209, choices are 8, 16, 32, or 64. Therefore, full_steps_per_rotation * <this value> = <microsteps_per_revolution>
##      microsteps_per_mm = (<full_steps_per_rotation> * <microsteps>) / (<belt_pitch> * <number_of_teeth_on_pulley>) = (200 * 16) / (2 * 20) = 80
##                          FLSun provided Marlin "Configuration.h" value for DEFAULT_AXIS_STEPS_PER_UNIT is { 80, 80, 80, 410 } ---> (X, Y, Z, E0)
##      <belt_pitch> = GT2 Belt, thus 2mm
##      <number_of_teeth_on_pulley> = 20t
##  <mm_per_microstep> = rotation_distance / <microsteps_per_revolution> = 40 / (200 * 16) = 0.0125mm ---> This is the minimum distance (mm) each stepper driver, 
##                                                                                                         configured as defined above, can command

##  Front Left Tower (210Deg, counter-clockwise about 0Deg/3 o'clock position)
[stepper_a]
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: P1.28
##  The following parameters are common for A/B/C
homing_speed: 40          # FLSun provided Marlin "Configuration.h" value for HOMING_FEEDRATE_MM_M is { (40*60), (40*60), (40*60) }
homing_retract_dist: 5    # FLSun provided Marlin "Configuration_adv.h" value for HOMING_BUMP_MM is { 5, 5, 5 }
homing_retract_speed: 5
second_homing_speed: 4    # FLSun provided Marlin "Configuration_adv.h" value for HOMING_BUMP_DIVISOR is { 10, 10, 10 }
#position_endstop: 336
#arm_length = 315

##  Front Right Tower (330Deg, counter-clockwise about 0Deg/3 o'clock position)
[stepper_b]
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: P1.26

##  Rear Tower (90Deg, counter-clockwise about 0Deg/3 o'clock position)
[stepper_c]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 40
endstop_pin: P1.24

##========================== A/B/C Stepper Driver UART configuration ========================
[tmc2209 stepper_a]
uart_pin: P1.17
interpolate: true
run_current: 0.950     # FLSun provided Marlin "Configuration_adv.h" value for X_CURRENT is 950mA RMS
sense_resistor: 0.110  # FLSun provided Marlin "Configuration_adv.h" value for X_RSENSE is 0.11
#stealthchop_threshold: 999999  # Commented out = always spreadCycle, 999999 = always stealthChop

[tmc2209 stepper_b]
uart_pin: P1.15
interpolate: true
run_current: 0.950     # FLSun provided Marlin "Configuration_adv.h" value for Y_CURRENT is 950mA RMS 
sense_resistor: 0.110  # FLSun provided Marlin "Configuration_adv.h" value for Y_RSENSE is 0.11
#stealthchop_threshold: 999999  # Commented out = always spreadCycle, 999999 = always stealthChop

[tmc2209 stepper_c]
uart_pin: P1.10
interpolate: true
run_current: 0.950     # FLSun provided Marlin "Configuration_adv.h" value for Z_CURRENT is 950mA RMS
sense_resistor: 0.110  # FLSun provided Marlin "Configuration_adv.h" value for Z_RSENSE is 0.11
#stealthchop_threshold: 999999  # Commented out = always spreadCycle, 999999 = always stealthChop

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: P2.13
dir_pin: P0.11    # Pin inverted for BMG LGX Lite
enable_pin: !P2.12
microsteps: 16
##  rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm> = 200 * 16 / 562 = 5.694
##  From Bondtech website:
##     - Stepper motor is a 1.8Deg motor hence 360/1.8 = 200 as <full_steps_per_rotation>
##     - Microsteps are set to 16
##     - E-steps value recommended for the LGX Lite is 562
##     - Max current is 1.0A. Recommended stepper motor current = 0.45 to 0.60A RMS.
##
##  Fine-tune rotation_distance when performing extruder calibration as described:
##  1) Make sure the extruder has filament in it, the hotend is heated to an appropriate temperature, and the printer is ready to extrude.
##  2) Use a marker to place a mark on the filament around 120mm from the intake of the extruder body. 
##     Then use a digital calipers to measure the actual distance of that mark as precisely as one can. Note this as <initial_mark_distance>.
##  3) Extrude 100mm of filament with the following command sequence: G91 followed by G1 E100 F60. 
##     Note 100mm as <requested_extrude_distance>. Wait for the extruder to finish the move (it will take about 100 seconds). 
##     It is important to use the slow extrusion rate for this test as a faster rate can cause high pressure in the extruder which will skew the results. 
##     (Do not use the "extrude button" on graphical front-ends for this test as they extrude at a fast rate.)
##  4) Use the digital calipers to measure the new distance between the extruder body and the mark on the filament. 
##     Note this as <subsequent_mark_distance>. Then calculate: actual_extrude_distance = <initial_mark_distance> - <subsequent_mark_distance>
##  5) Calculate rotation_distance as: rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance> Round the new rotation_distance to three decimal places.
rotation_distance: 5.580
nozzle_diameter: 0.4
filament_diameter: 1.750
max_extrude_only_distance: 150.0
pressure_advance: 0.0650
pressure_advance_smooth_time: 0.040


##========================== E0 Heater configuration ========================

heater_pin: P2.7
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: P0.24
#control: pid
#pid_Kp: 31.13
#pid_Ki: 3.96
#pid_Kd: 61.12
min_temp: 10   # FLSun provided Marlin "Configuration.h" value for HEATER_0_MINTEMP is -5DegC
max_temp: 275  # FLSun provided Marlin "Configuration.h" value for HEATER_0_MAXTEMP is 275DegC

##========================== E0 Stepper Driver UART configuration ========================
[tmc2209 extruder]
uart_pin: P1.8
interpolate: true
##  Amps RMS - Motor peak current * 0.707 * 0.80 (80% for 20% safety margin) = 1.0 * 0.707 * 0.80 = 0.5656. This is in the range of the above BMG recommended current.
run_current: 0.5656    # FLSun provided Marlin "Configuration_adv.h" value for E0_CURRENT is 950mA RMS, but this used a NEMA17 stepper not used for BMG LGX Lite
sense_resistor: 0.110  # FLSun provided Marlin "Configuration_adv.h" value for Y_RSENSE is 0.11
#stealthchop_threshold: 999999  # Commented out = always spreadCycle, 999999 = always stealthChop

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: P2.5
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.23
#control: pid
#pid_Kp: 325.10
#pid_Ki: 63.35
#pid_Kd: 417.10
min_temp: -5    # FLSun provided Marlin "Configuration.h" value for BED_MINTEMP is -5DegC
max_temp: 115   # FLSun provided Marlin "Configuration.h" value for BED_MAXTEMP is 115DegC

#####################################################################
#   Probe
#####################################################################

##  PROBE_ACCURACY results: maximum 15.512500, minimum 15.500000, range 0.012500, average 15.510000, median 15.512500, standard deviation 0.005000
[probe]
pin: !P1.25
x_offset: 0
y_offset: 0
##  FLSun provided Marlin "Configuration.h" value for NOZZLE_TO_PROBE_OFFSET is { 0, 0, -16.2 }
z_offset: 22.600     # Distance (mm) between the bed and the nozzle when the probe triggers. Must be computed via PROBE_CALIBRATE
speed: 5             # FLSun provided Marlin "Configuration.h" value for Z_PROBE_SPEED_FAST is 240mm/min (40mms/s) and Z_PROBE_SPEED_SLOW is 180mm/min (3mm/s)
samples: 5
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.020
samples_tolerance_retries: 3


#######################################################################
# Bed Mesh
#######################################################################

##  Only use if the PROBE_ACCURACY command outputs a range value < 0.025 mm
##  PROBE_ACCURACY results: maximum 15.512500, minimum 15.500000, range 0.012500, average 15.510000, median 15.512500, standard deviation 0.005000
[bed_mesh]
speed: 50
horizontal_move_z: 30  # The height (in mm) that the head should be commanded to move to (absolute!) prior to starting probe. Should be ~5mm larger than [probe] z_offset.
mesh_radius: 120
mesh_origin: 0,0
round_probe_count: 7
algorithm: bicubic

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan
pin: P2.3
kick_start_time: 0.5
##  Depending on fan, may need to increase this value if fan will not start
##  Can change cycle_time (increase) if fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If experiencing back flow, reduce fan_speed (0.0 = 0%, 1.0 = 100%)
fan_speed: 1.0

#####################################################################
#   Thermals
#####################################################################

[temperature_sensor speeder_pad]
##  Host (speederpad/raspi) Temp
sensor_type: temperature_host
max_temp: 100

## SKR 1.3 does not report temperature_mcu
#[temperature_sensor mcu_temp]
##  MCU Temp
#sensor_type: temperature_mcu
#max_temp: 100

#####################################################################
#   Displays
#####################################################################

##========================== EXP1 / EXP2 (display) pins ========================
## This information is provided strictly for reference/completeness. Nothing is connected to these connectors.
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_2=P0.28,
    EXP1_3=P1.18, EXP1_4=P1.19,
    EXP1_5=P1.20, EXP1_6=P1.21,    # Slot in the socket on this side
    EXP1_7=P1.22, EXP1_8=P1.23,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=P0.17, EXP2_2=P0.15,
    EXP2_3=P3.26, EXP2_4=P0.16,
    EXP2_5=P3.25, EXP2_6=P0.18,      # Slot in the socket on this side
    EXP2_7=P1.31, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#######################################################################
# End-stop style filament sensor
#######################################################################

[filament_switch_sensor filament_sensor]
pause_on_runout: False
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: P1.29

#######################################################################
# Klipper Extras
#######################################################################

[idle_timeout]
##  Idle time (in seconds) to wait before printer turns off heaters and steppers 
timeout: 900

##  These values are hand-entered after executing "TEST_RESONANCES AXIS=X" and "TEST_RESONANCES AXIS=Y" 
##  Refer to https://www.klipper3d.org/Measuring_Resonances.html
[input_shaper]
shaper_type_x: ei
shaper_freq_x: 38.2      # for mzv use 34.6
shaper_type_y: ei
shaper_freq_y: 40.8      # for mzv use 35.2

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

# Optional: Support for G2/G3 commands
[gcode_arcs]
resolution: 1.0

[display_status]

[save_variables]
filename: ~/savedVariables1.cfg

##  Enable the "M118" and "RESPOND" extended commands
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
# examples:
#   RESPOND PREFIX=<prefix> MSG="<message>"
#   RESPOND TYPE=error MSG="<message>"

#####################################################################
#   Homing Adjustment Routines
#####################################################################

[homing_override]
## FLSun provided Marlin "Configuration_adv.h" value for HOMING_BUMP_MM is { 5, 5, 5 }
## FLSun provided Marlin "Configuration_adv.h" value for HOMING_BUMP_DIVISOR is { 10, 10, 10 }
## The purpose of this homing_override is to lower the axes off the endstop switches after the second home.
gcode:
    G28                  ; home all axes
    G91                  ; Relative coordinates.
    G1 Z-10 F500         ; lower toolhead by 10mm to disengage endstop switches
    G90                  ; Absolute coordinates.

#####################################################################
#   Macros
#####################################################################

[delayed_gcode COOL_NOZZLE]
gcode:
    M104 S0                ; turn off hotend heater

[gcode_macro LAZY_HOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}


[gcode_macro PREHEAT]
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(65)|int %}

    G90                  ; Absolute coordinates.
    G28                  ; home all axes
    G0 X0 Y120 Z50 F3600 ; Move hotend to park position
    M190 S{bedtemp}      ; set & wait for bed temp


[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE_STATE
    M117 Priming
    G90                                     ; Absolute coordinates.
    M82                                     ; absolute extruder
    G92 E0                                  ; initialize extruder value to 0
    G1 X-125 Y0 Z0.4 F3000                  ; set nozzle to start position (5mm towards center of bed at 9 o'clock)
    G3 X0 Y-125 I125 J0 Z0.3 E50 F2700      ; move from current position counterclockwise (G3) to X=0,Y=-125 along a 125mm radius arc oriented about X+125,Y+0 (0,0, where I=X-offset,J=Y-offset) ~196mm
    G91                                     ; Relative coordinates.
    G1 Y0.4 F1000                           ; Move 0.4mm towards center of bed (X=0,Y=-124.6)
    G90                                     ; Absolute coordinates.
    G92 E0                                  ; initialize extruder value to 0
    G2 X-124.6 Y0 I0 J124.6 Z0.3 E50 F2700  ; move from current position clockwise (G2) to X=-124.6,Y=0 along a 124.6mm radius arc oriented about X+0,Y+124.6 (0,0, where I=X-offset,J=Y-offset) ~196mm
    G92 E0                                  ; initialize extruder value to 0
    G1 E-0.5 F3000                          ; Retract to avoid stringing.
    G91                                     ; Relative coordinates.
    G1 X-2 F1000                            ; Wipe left to break string.
    G1 X6 F3000                             ; Wipe right to break string.
    G90                                     ; absolute coordinates
    M82                                     ; absolute extruder
    G92 E0                                  ; initialize extruder value to 0
    RESTORE_GCODE_STATE NAME=PURGE_LINE_STATE


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set BED_TEMP = params.BED|int %}
    {% set HOTEND_TEMP = params.HOTEND|int %}

    BED_MESH_PROFILE LOAD=default
    G90                                       ; absolute coordinates
    M82                                       ; absolute extruder
    G92 E0                                    ; initialize extruder value to 0
    G28                                       ; home axis
    M117 Preheating Bed
    M140 S{BED_TEMP}                          ; begin heating bed
    M117 Preheating Nozzle
    M104 S160                                 ; begin heating nozzle
    M117 Stabilizing Bed Temp
    M190 S{BED_TEMP}                          ; wait for bed to reach temp
    G1 Z150 F3000                             ; lower nozzle to 150mm above bed
    G1 X-125 Y0 Z0.4 F3000                    ; set nozzle to purge start position (5mm from 9 o'clock)
    M117 Stabilizing Hotend Temp
    M109 S{HOTEND_TEMP}                       ; wait for nozzle to reach temp
#    PURGE_LINE                                ; lay down the purge line(s)
#    G91                                       ; relative coordinates
#    G0 Z0.5                                   ; raise nozzle up
#    G90                                       ; absolute coordinates
#    M82                                       ; absolute extruder
    G92 E0                                    ; initialize extruder value to 0
    M117 Printing...


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0 ; resets the z-offset (otherwise, )
    G91                ; relative coordinates
    G1 E-1 F300        ; retract filament a bit before lifting
    G1 Z5 E-5 F6000    ; raise nozzle from current position, final extruder retraction (total 6.0mm)
    G28                ; home axis
#    G1 Z-5 F3000       ; lower nozzle by 5mm to disengage endstop switches
    G90                ; absolute coordinates
    M82                ; absolute extruder
    G92 E0             ; initialize extruder value to 0
    M104 S0            ; turn off hotend heater
    M140 S0            ; turn off heat bed heater
    M107               ; turn off fans
    M84                ; steppers off
    G90                ; absolute positioning


[gcode_macro FILAMENT_UNLOAD]
gcode:
    # Parameters
    {% set HOTEND_TEMP = params.HOTEND|default(225)|int %}

    LAZY_HOME              ; home axis if necessary
    G90                    ; absolute coordinates
    G1 Z275                ; move to servicing position
    RESPOND MSG="Preheating Nozzle"
    M109 S{HOTEND_TEMP}    ; wait for nozzle to reach temp
    M83                    ; Relative extruder mode.
    G92 E0                 ; initialize extruder value to 0
    RESPOND MSG="Unloading Filament"
    G1 E10 F300            ; extrude a little to soften tip
    G4 P4000               ; dwell 4000ms (10mm @ 300mm/60sec = 2seconds + 2 seconds for settling)
    G1 E-10 F3000          ; jerk the filament out of the melt zone
    G1 E-100 F1800         ; retract the length from melt zone to extruder (~110mm)
    G4 P8000               ; dwell 8000ms (100mm @ 1800mm/60sec = 3.3seconds + 5.2 seconds for settling)
    M82                    ; absolute extruder
    G92 E0                 ; initialize extruder value to 0
    M104 S0                ; turn off hotend heater
    RESPOND MSG="Unload Complete!"


[gcode_macro FILAMENT_LOAD]
gcode:
    # Parameters
    {% set HOTEND_TEMP = params.HOTEND|default(225)|int %}

    LAZY_HOME              ; home axis if necessary
    G90                    ; absolute coordinates
    G1 Z275                ; move to servicing position
    RESPOND MSG="Preheating Nozzle"
    M109 S{HOTEND_TEMP}    ; wait for nozzle to reach temp
    M83                    ; Relative extruder mode.
    G92 E0                 ; initialize extruder value to 0
    RESPOND MSG="Loading Filament"
    G1 E100 F300           ; load the length from the extruder to the heater block
    G4 P20000              ; dwell 20000ms (100mm @ 300mm/60sec = 20seconds)
    G1 E20 F150            ; load 20mm extra to prime the nozzle
    G4 P10000              ; dwell 10000ms (20mm @ 150mm/60sec = 8seconds + 2 seconds for settling)
    M82                    ; absolute extruder
    G92 E0                 ; initialize extruder value to 0
    M104 S0                ; turn off hotend heater
    RESPOND MSG="Load Complete!"


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}         #edit to your park position
    {% set y = params.Y|default(-120) %}      #edit to your park position
    {% set z = params.Z|default(150)|float %}  #edit to your park position
    {% set e = params.E|default(0.5) %}         #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME] 
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} #Ensure filament is loaded (filament detection switch is TRUE)
      {% set e = params.E|default(0.5) %}                                                #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}
    {% endif %} 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.330
#*# pid_ki = 1.872
#*# pid_kd = 679.415
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 32.449
#*# pid_ki = 2.431
#*# pid_kd = 108.300
#*#
#*# [probe]
#*#
#*# [stepper_a]
#*# arm_length = 315.634779
#*# position_endstop = 344.204514
#*#
#*# [stepper_b]
#*# arm_length = 316.147702
#*# position_endstop = 343.221402
#*#
#*# [stepper_c]
#*# arm_length = 314.652179
#*# position_endstop = 343.355357
#*#
#*# [delta_calibrate]
#*# height0 = 22.6
#*# height0_pos = 25679.000,25679.000,25679.000
#*# height1 = 22.6
#*# height1_pos = 30596.000,30596.000,22723.000
#*# height2 = 22.6
#*# height2_pos = 25022.000,33516.000,25022.000
#*# height3 = 22.6
#*# height3_pos = 22927.000,29861.000,29861.000
#*# height4 = 22.6
#*# height4_pos = 24889.000,24889.000,31063.000
#*# height5 = 22.6
#*# height5_pos = 29084.000,23043.000,29084.000
#*# height6 = 22.6
#*# height6_pos = 32173.000,24897.000,24897.000
#*# distance0 = 65.07
#*# distance0_pos1 = 27350.748,27567.788,27552.277
#*# distance0_pos2 = 25303.774,29818.066,29802.556
#*# distance1 = 65.18
#*# distance1_pos1 = 27448.989,27369.988,27651.848
#*# distance1_pos2 = 26732.268,26653.267,31593.069
#*# distance2 = 65.15
#*# distance2_pos1 = 27646.789,27271.746,27552.277
#*# distance2_pos2 = 29897.068,25224.773,29802.556
#*# distance3 = 65.16
#*# distance3_pos1 = 27746.360,27369.988,27354.477
#*# distance3_pos2 = 31687.581,26653.267,26637.756
#*# distance4 = 65.22
#*# distance4_pos1 = 27646.789,27567.788,27256.236
#*# distance4_pos2 = 29897.068,29818.066,25209.262
#*# distance5 = 65.32
#*# distance5_pos1 = 27448.989,27667.358,27354.477
#*# distance5_pos2 = 26732.268,31608.579,26637.756
#*# distance6 = 65.02
#*# distance6_pos1 = 25458.170,29349.323,29660.774
#*# distance6_pos2 = 26882.642,26517.417,31420.024
#*# distance7 = 65.06
#*# distance7_pos1 = 26896.363,26530.968,31078.799
#*# distance7_pos2 = 29960.412,25276.129,29535.585
#*# distance8 = 65.16
#*# distance8_pos1 = 29755.286,25379.168,29333.812
#*# distance8_pos2 = 31514.536,26803.640,26501.907
#*# distance9 = 65.21
#*# distance9_pos1 = 31173.311,26817.362,26515.458
#*# distance9_pos2 = 29630.097,29881.411,25260.619
#*# distance10 = 65.15
#*# distance10_pos1 = 29428.324,29676.285,25363.658
#*# distance10_pos2 = 26596.419,31435.534,26788.130
#*# distance11 = 65.17
#*# distance11_pos1 = 26609.970,31094.310,26801.851
#*# distance11_pos2 = 25355.131,29551.095,29865.900
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.161980, -0.161980, -0.161980, -0.161980, -0.161980, -0.161980, -0.161980
#*# 	  -0.091872, -0.091872, -0.050848, -0.027986, -0.033344, -0.096595, -0.096595
#*# 	  0.024742, 0.024742, 0.016933, 0.023928, -0.007853, -0.022991, -0.022991
#*# 	  0.093490, 0.092720, 0.082225, 0.031261, -0.023136, -0.026263, -0.032896
#*# 	  0.140629, 0.140629, 0.112266, 0.037259, -0.020519, -0.057270, -0.057270
#*# 	  0.161911, 0.161911, 0.120650, 0.034729, -0.044970, -0.062187, -0.062187
#*# 	  0.048780, 0.048780, 0.048780, 0.048780, 0.048780, 0.048780, 0.048780
#*# tension = 0.2
#*# min_x = -120.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -120.0
#*# x_count = 7
#*# max_y = 120.0
#*# mesh_x_pps = 2
#*# max_x = 120.0
